{"ast":null,"code":"import _slicedToArray from \"/Users/anian/Desktop/services-all/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/anian/Desktop/services-all/src/pages/AdminPanel.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { fire } from \"../config/fire\";\nimport \"../styles/admin.css\";\nimport AlertBox from \"../components/AlertBox\";\n\nfunction Admin(props) {\n  function handleSelection(e) {\n    e.stopPropagation();\n    setSelection(e.target.innerText);\n  }\n\n  let _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      chatList = _useState2[0],\n      setChatlist = _useState2[1],\n      _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      list = _useState4[0],\n      setList = _useState4[1],\n      _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      selection = _useState6[0],\n      setSelection = _useState6[1],\n      _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      alert = _useState8[0],\n      setAlert = _useState8[1],\n      _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      message = _useState10[0],\n      setMessage = _useState10[1];\n\n  useEffect(() => {\n    let results = {},\n        mResults = {};\n\n    if (alert === \"\") {\n      setTimeout(() => {\n        setAlert(\"\");\n      }, 3000);\n    }\n\n    fire.firestore().collection(\"chats\").onSnapshot(snapshot => {\n      snapshot.forEach(doc => {\n        results[doc.id] = doc.data();\n      });\n      setChatlist(results);\n    });\n\n    if (selection) {\n      fire.firestore().collection(\"chats\").doc(selection).onSnapshot(snapshot => {\n        setList(snapshot.data());\n      });\n    }\n  }, [selection, alert]);\n\n  function send(e) {\n    e.preventDefault();\n\n    if (!selection || message === \"\") {\n      setAlert(\"Please select a user and enter a text to send a message\");\n      return;\n    }\n\n    if (list) {\n      fire.firestore().collection(\"chats\").doc(selection).update({\n        [Date.now()]: {\n          text: message,\n          sender: fire.auth().currentUser.email\n        }\n      }).then(() => setMessage(\"\"));\n    } else {\n      fire.firestore().collection(\"chats\").doc(selection).current.set({\n        [Date.now()]: {\n          text: message,\n          sender: fire.auth().currentUser.email\n        }\n      }).then(() => setMessage(\"\"));\n    }\n  }\n\n  return React.createElement(\"div\", {\n    className: \"admin-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"chat-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"User Support\"), React.createElement(\"div\", {\n    className: \"chat-body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, alert ? React.createElement(AlertBox, {\n    message: alert,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }) : null, React.createElement(\"div\", {\n    className: \"user-selection\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, chatList && Object.keys(chatList).map((user, index) => {\n    return React.createElement(\"div\", {\n      className: \"user-item\",\n      key: index,\n      onClick: handleSelection,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, user));\n  })), React.createElement(\"div\", {\n    className: \"user-chat\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"chat-window\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, list && Object.keys(list).map((date, index) => {\n    return React.createElement(\"div\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, list[date].sender, \": \"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, list[date].text), React.createElement(\"span\", {\n      style: {\n        float: \"right\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, new Date(+date).toDateString()));\n  })), React.createElement(\"form\", {\n    onSubmit: send,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(\"textarea\", {\n    className: \"chat-textarea\",\n    value: message,\n    onChange: ({\n      target\n    }) => setMessage(target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"chat-btn\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, \"Send\"))))));\n}\n\nexport default Admin;","map":{"version":3,"sources":["/Users/anian/Desktop/services-all/src/pages/AdminPanel.js"],"names":["React","useState","useEffect","fire","AlertBox","Admin","props","handleSelection","e","stopPropagation","setSelection","target","innerText","chatList","setChatlist","list","setList","selection","alert","setAlert","message","setMessage","results","mResults","setTimeout","firestore","collection","onSnapshot","snapshot","forEach","doc","id","data","send","preventDefault","update","Date","now","text","sender","auth","currentUser","email","then","current","set","Object","keys","map","user","index","date","float","toDateString","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { fire } from \"../config/fire\";\nimport \"../styles/admin.css\";\nimport AlertBox from \"../components/AlertBox\";\n\nfunction Admin(props) {\n  function handleSelection(e) {\n    e.stopPropagation();\n    setSelection(e.target.innerText);\n  }\n  let [chatList, setChatlist] = useState({}),\n    [list, setList] = useState({}),\n    [selection, setSelection] = useState(\"\"),\n    [alert, setAlert] = useState(\"\"),\n    [message, setMessage] = useState(\"\");\n  useEffect(() => {\n    let results = {},\n      mResults = {};\n\n    if (alert === \"\") {\n      setTimeout(() => {\n        setAlert(\"\");\n      }, 3000);\n    }\n\n    fire\n      .firestore()\n      .collection(\"chats\")\n      .onSnapshot(snapshot => {\n        snapshot.forEach(doc => {\n          results[doc.id] = doc.data();\n        });\n        setChatlist(results);\n      });\n    if (selection) {\n      fire\n        .firestore()\n        .collection(\"chats\")\n        .doc(selection)\n        .onSnapshot(snapshot => {\n          setList(snapshot.data());\n        });\n    }\n  }, [selection, alert]);\n\n  function send(e) {\n    e.preventDefault();\n    if (!selection || message === \"\") {\n      setAlert(\"Please select a user and enter a text to send a message\");\n      return;\n    }\n    if (list) {\n      fire\n        .firestore()\n        .collection(\"chats\")\n        .doc(selection)\n        .update({\n          [Date.now()]: {\n            text: message,\n            sender: fire.auth().currentUser.email\n          }\n        })\n        .then(() => setMessage(\"\"));\n    } else {\n      fire\n        .firestore()\n        .collection(\"chats\")\n        .doc(selection)\n        .current.set({\n          [Date.now()]: {\n            text: message,\n            sender: fire.auth().currentUser.email\n          }\n        })\n        .then(() => setMessage(\"\"));\n    }\n  }\n\n  return (\n    <div className=\"admin-container\">\n      <div className=\"chat-title\">User Support</div>\n      <div className=\"chat-body\">\n        {alert ? <AlertBox message={alert} /> : null}\n        <div className=\"user-selection\">\n          {chatList &&\n            Object.keys(chatList).map((user, index) => {\n              return (\n                <div\n                  className=\"user-item\"\n                  key={index}\n                  onClick={handleSelection}\n                >\n                  <div>{user}</div>\n                </div>\n              );\n            })}\n        </div>\n        <div className=\"user-chat\">\n          <div>\n            <div className=\"chat-window\">\n              {list &&\n                Object.keys(list).map((date, index) => {\n                  return (\n                    <div key={index}>\n                      <strong>{list[date].sender}: </strong>\n                      <p>{list[date].text}</p>\n                      <span style={{ float: \"right\" }}>\n                        {new Date(+date).toDateString()}\n                      </span>\n                    </div>\n                  );\n                })}\n            </div>\n            <form onSubmit={send}>\n              <textarea\n                className=\"chat-textarea\"\n                value={message}\n                onChange={({ target }) => setMessage(target.value)}\n              />\n              <button className=\"chat-btn\" type=\"submit\">\n                Send\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Admin;\n"]},"metadata":{},"sourceType":"module"}