{"ast":null,"code":"import _slicedToArray from \"/Users/anian/Desktop/services-all/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/anian/Desktop/services-all/src/pages/AdminPanel.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { fire } from \"../config/fire\";\nimport \"../styles/admin.css\";\n\nfunction Admin(props) {\n  function handleSelection(e) {\n    e.stopPropagation();\n    setSelection(e.target.innerText);\n  }\n\n  let _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      chatList = _useState2[0],\n      setChatlist = _useState2[1],\n      _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      list = _useState4[0],\n      setList = _useState4[1],\n      _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      selection = _useState6[0],\n      setSelection = _useState6[1],\n      _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      message = _useState8[0],\n      setMessage = _useState8[1];\n\n  useEffect(() => {\n    let results = {},\n        mResults = {};\n    fire.firestore().collection(\"chats\").onSnapshot(snapshot => {\n      snapshot.forEach(doc => {\n        results[doc.id] = doc.data();\n      });\n      setChatlist(results);\n    });\n\n    if (selection) {\n      fire.firestore().collection(\"chats\").doc(selection).onSnapshot(snapshot => {\n        setList(snapshot.data());\n      });\n    }\n  }, [selection]);\n\n  function send(e) {\n    e.preventDefault();\n\n    if (list) {\n      fire.firestore().collection(\"chats\").doc(selection).update({\n        [Date.now()]: {\n          text: message,\n          sender: fire.auth().currentUser.email\n        }\n      }).then(() => setMessage(\"\"));\n    } else {\n      fire.firestore().collection(\"chats\").doc(selection).current.set({\n        [Date.now()]: {\n          text: message,\n          sender: fire.auth().currentUser.email\n        }\n      }).then(() => setMessage(\"\"));\n    }\n  }\n\n  return React.createElement(\"div\", {\n    className: \"admin-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"user-election\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, chatList && Object.keys(chatList).map((user, index) => {\n    return React.createElement(\"div\", {\n      className: \"user-item\",\n      key: index,\n      onClick: handleSelection,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, user));\n  })), React.createElement(\"div\", {\n    className: \"user-chat\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      height: \"50vh\",\n      overflow: \"auto\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, list && Object.keys(list).map((date, index) => {\n    return React.createElement(\"div\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, list[date].sender, \": \"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, list[date].text), React.createElement(\"span\", {\n      style: {\n        float: \"right\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, new Date(+date).toDateString()));\n  })), React.createElement(\"form\", {\n    onSubmit: send,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(\"textarea\", {\n    value: message,\n    onChange: ({\n      target\n    }) => setMessage(target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"chat-btn\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \"Send\")))));\n}\n\nexport default Admin;","map":{"version":3,"sources":["/Users/anian/Desktop/services-all/src/pages/AdminPanel.js"],"names":["React","useState","useEffect","fire","Admin","props","handleSelection","e","stopPropagation","setSelection","target","innerText","chatList","setChatlist","list","setList","selection","message","setMessage","results","mResults","firestore","collection","onSnapshot","snapshot","forEach","doc","id","data","send","preventDefault","update","Date","now","text","sender","auth","currentUser","email","then","current","set","Object","keys","map","user","index","height","overflow","date","float","toDateString","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { fire } from \"../config/fire\";\nimport \"../styles/admin.css\";\n\nfunction Admin(props) {\n  function handleSelection(e) {\n    e.stopPropagation();\n    setSelection(e.target.innerText);\n  }\n  let [chatList, setChatlist] = useState({}),\n    [list, setList] = useState({}),\n    [selection, setSelection] = useState(\"\"),\n    [message, setMessage] = useState(\"\");\n  useEffect(() => {\n    let results = {},\n      mResults = {};\n\n    fire\n      .firestore()\n      .collection(\"chats\")\n      .onSnapshot(snapshot => {\n        snapshot.forEach(doc => {\n          results[doc.id] = doc.data();\n        });\n        setChatlist(results);\n      });\n    if (selection) {\n      fire\n        .firestore()\n        .collection(\"chats\")\n        .doc(selection)\n        .onSnapshot(snapshot => {\n          setList(snapshot.data());\n        });\n    }\n  }, [selection]);\n\n  function send(e) {\n    e.preventDefault();\n    if (list) {\n      fire\n        .firestore()\n        .collection(\"chats\")\n        .doc(selection)\n        .update({\n          [Date.now()]: {\n            text: message,\n            sender: fire.auth().currentUser.email\n          }\n        })\n        .then(() => setMessage(\"\"));\n    } else {\n      fire\n        .firestore()\n        .collection(\"chats\")\n        .doc(selection)\n        .current.set({\n          [Date.now()]: {\n            text: message,\n            sender: fire.auth().currentUser.email\n          }\n        })\n        .then(() => setMessage(\"\"));\n    }\n  }\n\n  return (\n    <div className=\"admin-container\">\n      <div className=\"user-election\">\n        {chatList &&\n          Object.keys(chatList).map((user, index) => {\n            return (\n              <div className=\"user-item\" key={index} onClick={handleSelection}>\n                <div>{user}</div>\n              </div>\n            );\n          })}\n      </div>\n      <div className=\"user-chat\">\n        <div>\n          <div style={{ height: \"50vh\", overflow: \"auto\" }}>\n            {list &&\n              Object.keys(list).map((date, index) => {\n                return (\n                  <div key={index}>\n                    <strong>{list[date].sender}: </strong>\n                    <p>{list[date].text}</p>\n                    <span style={{ float: \"right\" }}>\n                      {new Date(+date).toDateString()}\n                    </span>\n                  </div>\n                );\n              })}\n          </div>\n          <form onSubmit={send}>\n            <textarea\n              value={message}\n              onChange={({ target }) => setMessage(target.value)}\n            />\n            <button className=\"chat-btn\" type=\"submit\">Send</button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Admin;\n"]},"metadata":{},"sourceType":"module"}