{"ast":null,"code":"import _slicedToArray from \"/Users/anian/Desktop/Project/services-all/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/anian/Desktop/Project/services-all/src/Message/Message.js\";\nimport React, { useRef, useState, useEffect } from \"react\";\nimport { fire } from \"../config/fire\";\n\nfunction Messages(props) {\n  let messagesRef = useRef(fire.firestore().collection(\"chats\").doc(fire.auth().currentUser.email));\n\n  let _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      message = _useState2[0],\n      setMessage = _useState2[1];\n\n  let _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      list = _useState4[0],\n      setList = _useState4[1];\n\n  useEffect(() => {\n    messagesRef.current.onSnapshot(function (doc) {\n      setList(doc.data());\n    });\n  }, []);\n\n  function send(e) {\n    e.preventDefault();\n\n    if (list) {\n      messagesRef.current.update({\n        [Date.now()]: {\n          text: message,\n          sender: fire.auth().currentUser.email\n        }\n      }).then(() => setMessage(\"\"));\n    } else {\n      messagesRef.current.set({\n        [Date.now()]: {\n          text: message,\n          sender: fire.auth().currentUser.email\n        }\n      }).then(() => setMessage(\"\"));\n    }\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      height: \"50vh\",\n      overflow: \"auto\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, list && Object.keys(list).map(date => {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, list[date].sender, \": \"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, list[date].text), React.createElement(\"span\", {\n      style: {\n        float: \"right\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, new Date(+date).toDateString()));\n  })), React.createElement(\"form\", {\n    onSubmit: send,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"textarea\", {\n    value: message,\n    onChange: ({\n      target\n    }) => setMessage(target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Send\")));\n}\n\nexport default Messages;","map":{"version":3,"sources":["/Users/anian/Desktop/Project/services-all/src/Message/Message.js"],"names":["React","useRef","useState","useEffect","fire","Messages","props","messagesRef","firestore","collection","doc","auth","currentUser","email","message","setMessage","list","setList","current","onSnapshot","data","send","e","preventDefault","update","Date","now","text","sender","then","set","height","overflow","Object","keys","map","date","float","toDateString","target","value"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\nimport { fire } from \"../config/fire\";\n\nfunction Messages(props) {\n    let messagesRef = useRef(fire.firestore().collection(\"chats\").doc(fire.auth().currentUser.email));\n    let [message, setMessage] = useState(\"\");\n    let [list, setList] = useState({});\n    useEffect(() => {\n        messagesRef.current.onSnapshot(function(doc) {\n            setList(doc.data());\n        });\n    }, []);\n    function send(e) {\n        e.preventDefault();\n        if (list) {\n            messagesRef.current.update({\n                [Date.now()]: {\n                    text: message,\n                    sender: fire.auth().currentUser.email\n                }\n            }).then(() => setMessage(\"\"))\n        } else {\n            messagesRef.current.set({\n                [Date.now()]: {\n                    text: message,\n                    sender: fire.auth().currentUser.email\n                }\n            }).then(() => setMessage(\"\"))\n        }\n    }\n    return (\n        <div>\n            <div style={{height: \"50vh\", overflow: \"auto\"}}>\n                {\n                    list && Object.keys(list).map(date => {\n                        return (\n                            <div>\n                                <strong>{list[date].sender}: </strong>\n                                <p>{list[date].text}</p>\n                                <span style={{float: \"right\"}}>{(new Date(+date)).toDateString()}</span>\n                            </div>\n                        );\n                    })\n                }\n            </div>\n            <form onSubmit={send}>\n                <textarea value={message} onChange={({ target }) => setMessage(target.value)} />\n                <button type=\"submit\">\n                    Send\n                </button>\n            </form>\n        </div>\n    );\n}\n\nexport default Messages;"]},"metadata":{},"sourceType":"module"}