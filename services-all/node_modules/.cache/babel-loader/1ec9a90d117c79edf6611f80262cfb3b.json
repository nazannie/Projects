{"ast":null,"code":"import _slicedToArray from \"/Users/anian/Desktop/services-all/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/anian/Desktop/services-all/src/Message/Message.js\";\nimport React, { useRef, useState, useEffect, useContext } from \"react\";\nimport { fire } from \"../config/fire\";\nimport { UserContext } from \"../App\";\nimport \"../styles/message.css\";\n\nfunction Messages(props) {\n  let user = useContext(UserContext);\n  let messagesRef = useRef(user.signedIn ? fire.firestore().collection(\"chats\").doc(fire.auth().currentUser.email) : null);\n\n  let _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      message = _useState2[0],\n      setMessage = _useState2[1];\n\n  let _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      list = _useState4[0],\n      setList = _useState4[1];\n\n  useEffect(() => {\n    messagesRef.current.onSnapshot(function (doc) {\n      setList(doc.data());\n    });\n  }, []);\n\n  function openChat(e) {\n    e.stopPropagation();\n    e.target.previousElementSibling.style.display = \"block\";\n  }\n\n  function closeChat(e) {\n    e.stopPropagation();\n    e.target.parentElement.parentElement.style.display = \"none\";\n  }\n\n  function send(e) {\n    e.preventDefault();\n\n    if (list) {\n      messagesRef.current.update({\n        [Date.now()]: {\n          text: message,\n          sender: fire.auth().currentUser.email\n        }\n      }).then(() => setMessage(\"\"));\n    } else {\n      messagesRef.current.set({\n        [Date.now()]: {\n          text: message,\n          sender: fire.auth().currentUser.email\n        }\n      }).then(() => setMessage(\"\"));\n    }\n  }\n\n  return React.createElement(\"div\", {\n    className: \"chat-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"popup-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"chat-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"support-chat\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Support Chat\"), React.createElement(\"button\", {\n    className: \"close-chat-btn\",\n    onClick: closeChat,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"X\")), React.createElement(\"div\", {\n    className: \"chat-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, list && Object.keys(list).map(date => {\n    return React.createElement(\"div\", {\n      className: \"chat-area\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, list[date].sender, \": \"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, list[date].text), React.createElement(\"span\", {\n      style: {\n        float: \"right\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, new Date(+date).toDateString()));\n  })), React.createElement(\"form\", {\n    onSubmit: send,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(\"textarea\", {\n    className: \"msg-textarea\",\n    value: message,\n    onChange: ({\n      target\n    }) => setMessage(target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"msg-btn\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }))), React.createElement(\"button\", {\n    className: \"chat-button\",\n    onClick: openChat,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"Need help? Click here to get touch with us\"));\n}\n\nexport default Messages;","map":{"version":3,"sources":["/Users/anian/Desktop/services-all/src/Message/Message.js"],"names":["React","useRef","useState","useEffect","useContext","fire","UserContext","Messages","props","user","messagesRef","signedIn","firestore","collection","doc","auth","currentUser","email","message","setMessage","list","setList","current","onSnapshot","data","openChat","e","stopPropagation","target","previousElementSibling","style","display","closeChat","parentElement","send","preventDefault","update","Date","now","text","sender","then","set","Object","keys","map","date","float","toDateString","value"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,EAAkCC,SAAlC,EAA6CC,UAA7C,QAA+D,OAA/D;AACA,SAASC,IAAT,QAAqB,gBAArB;AACA,SAASC,WAAT,QAA4B,QAA5B;AACA,OAAO,uBAAP;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,MAAIC,IAAI,GAAGL,UAAU,CAACE,WAAD,CAArB;AACA,MAAII,WAAW,GAAGT,MAAM,CACtBQ,IAAI,CAACE,QAAL,GACIN,IAAI,CACDO,SADH,GAEGC,UAFH,CAEc,OAFd,EAGGC,GAHH,CAGOT,IAAI,CAACU,IAAL,GAAYC,WAAZ,CAAwBC,KAH/B,CADJ,GAKI,IANkB,CAAxB;;AAFuB,kBAUKf,QAAQ,CAAC,EAAD,CAVb;AAAA;AAAA,MAUlBgB,OAVkB;AAAA,MAUTC,UAVS;;AAAA,mBAWDjB,QAAQ,CAAC,EAAD,CAXP;AAAA;AAAA,MAWlBkB,IAXkB;AAAA,MAWZC,OAXY;;AAavBlB,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,WAAW,CAACY,OAAZ,CAAoBC,UAApB,CAA+B,UAAST,GAAT,EAAc;AAC3CO,MAAAA,OAAO,CAACP,GAAG,CAACU,IAAJ,EAAD,CAAP;AACD,KAFD;AAGD,GAJQ,EAIN,EAJM,CAAT;;AAMA,WAASC,QAAT,CAAkBC,CAAlB,EAAqB;AACnBA,IAAAA,CAAC,CAACC,eAAF;AACAD,IAAAA,CAAC,CAACE,MAAF,CAASC,sBAAT,CAAgCC,KAAhC,CAAsCC,OAAtC,GAAgD,OAAhD;AACD;;AAED,WAASC,SAAT,CAAmBN,CAAnB,EAAsB;AACpBA,IAAAA,CAAC,CAACC,eAAF;AACAD,IAAAA,CAAC,CAACE,MAAF,CAASK,aAAT,CAAuBA,aAAvB,CAAqCH,KAArC,CAA2CC,OAA3C,GAAqD,MAArD;AACD;;AAED,WAASG,IAAT,CAAcR,CAAd,EAAiB;AACfA,IAAAA,CAAC,CAACS,cAAF;;AACA,QAAIf,IAAJ,EAAU;AACRV,MAAAA,WAAW,CAACY,OAAZ,CACGc,MADH,CACU;AACN,SAACC,IAAI,CAACC,GAAL,EAAD,GAAc;AACZC,UAAAA,IAAI,EAAErB,OADM;AAEZsB,UAAAA,MAAM,EAAEnC,IAAI,CAACU,IAAL,GAAYC,WAAZ,CAAwBC;AAFpB;AADR,OADV,EAOGwB,IAPH,CAOQ,MAAMtB,UAAU,CAAC,EAAD,CAPxB;AAQD,KATD,MASO;AACLT,MAAAA,WAAW,CAACY,OAAZ,CACGoB,GADH,CACO;AACH,SAACL,IAAI,CAACC,GAAL,EAAD,GAAc;AACZC,UAAAA,IAAI,EAAErB,OADM;AAEZsB,UAAAA,MAAM,EAAEnC,IAAI,CAACU,IAAL,GAAYC,WAAZ,CAAwBC;AAFpB;AADX,OADP,EAOGwB,IAPH,CAOQ,MAAMtB,UAAU,CAAC,EAAD,CAPxB;AAQD;AACF;;AACD,SACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE;AAAQ,IAAA,SAAS,EAAC,gBAAlB;AAAmC,IAAA,OAAO,EAAEa,SAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFF,CADF,EAOE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGZ,IAAI,IACHuB,MAAM,CAACC,IAAP,CAAYxB,IAAZ,EAAkByB,GAAlB,CAAsBC,IAAI,IAAI;AAC5B,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAS1B,IAAI,CAAC0B,IAAD,CAAJ,CAAWN,MAApB,OADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIpB,IAAI,CAAC0B,IAAD,CAAJ,CAAWP,IAAf,CAFF,EAGE;AAAM,MAAA,KAAK,EAAE;AAAEQ,QAAAA,KAAK,EAAE;AAAT,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,IAAIV,IAAJ,CAAS,CAACS,IAAV,EAAgBE,YAAhB,EADH,CAHF,CADF;AASD,GAVD,CAFJ,CAPF,EAqBE;AAAM,IAAA,QAAQ,EAAEd,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAC,cADZ;AAEE,IAAA,KAAK,EAAEhB,OAFT;AAGE,IAAA,QAAQ,EAAE,CAAC;AAAEU,MAAAA;AAAF,KAAD,KAAgBT,UAAU,CAACS,MAAM,CAACqB,KAAR,CAHtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAME;AAAQ,IAAA,SAAS,EAAC,SAAlB;AAA4B,IAAA,IAAI,EAAC,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CArBF,CADF,EAiCE;AAAQ,IAAA,SAAS,EAAC,aAAlB;AAAgC,IAAA,OAAO,EAAExB,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDAjCF,CADF;AAuCD;;AAED,eAAelB,QAAf","sourcesContent":["import React, { useRef, useState, useEffect, useContext } from \"react\";\nimport { fire } from \"../config/fire\";\nimport { UserContext } from \"../App\";\nimport \"../styles/message.css\";\n\nfunction Messages(props) {\n  let user = useContext(UserContext);\n  let messagesRef = useRef(\n    user.signedIn\n      ? fire\n          .firestore()\n          .collection(\"chats\")\n          .doc(fire.auth().currentUser.email)\n      : null\n  );\n  let [message, setMessage] = useState(\"\");\n  let [list, setList] = useState({});\n\n  useEffect(() => {\n    messagesRef.current.onSnapshot(function(doc) {\n      setList(doc.data());\n    });\n  }, []);\n\n  function openChat(e) {\n    e.stopPropagation();\n    e.target.previousElementSibling.style.display = \"block\";\n  }\n\n  function closeChat(e) {\n    e.stopPropagation();\n    e.target.parentElement.parentElement.style.display = \"none\";\n  }\n\n  function send(e) {\n    e.preventDefault();\n    if (list) {\n      messagesRef.current\n        .update({\n          [Date.now()]: {\n            text: message,\n            sender: fire.auth().currentUser.email\n          }\n        })\n        .then(() => setMessage(\"\"));\n    } else {\n      messagesRef.current\n        .set({\n          [Date.now()]: {\n            text: message,\n            sender: fire.auth().currentUser.email\n          }\n        })\n        .then(() => setMessage(\"\"));\n    }\n  }\n  return (\n    <div className=\"chat-container\">\n      <div className=\"popup-container\">\n        <div className=\"chat-header\">\n          <p className=\"support-chat\">Support Chat</p>\n          <button className=\"close-chat-btn\" onClick={closeChat}>\n            X\n          </button>\n        </div>\n        <div className=\"chat-content\">\n          {list &&\n            Object.keys(list).map(date => {\n              return (\n                <div className=\"chat-area\">\n                  <strong>{list[date].sender}: </strong>\n                  <p>{list[date].text}</p>\n                  <span style={{ float: \"right\" }}>\n                    {new Date(+date).toDateString()}\n                  </span>\n                </div>\n              );\n            })}\n        </div>\n        <form onSubmit={send}>\n          <textarea\n            className=\"msg-textarea\"\n            value={message}\n            onChange={({ target }) => setMessage(target.value)}\n          />\n          <button className=\"msg-btn\" type=\"submit\">\n            \n          </button>\n        </form>\n      </div>\n      <button className=\"chat-button\" onClick={openChat}>\n        Need help? Click here to get touch with us\n      </button>\n    </div>\n  );\n}\n\nexport default Messages;\n"]},"metadata":{},"sourceType":"module"}